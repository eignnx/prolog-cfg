created(1617392929.194428).
assert(data_word_type(my,determiner)).
assert(data_word_type(your,determiner)).
assert(data_word_type(his,determiner)).
assert(data_word_type(her,determiner)).
assert(data_word_type(their,determiner)).
assert(data_word_type(our,determiner)).
assert(data_word_type(the,determiner)).
assert(data_word_type(a,determiner)).
assert(data_word_type(an,determiner)).
assert(data_word_type(every,determiner)).
assert(data_word_type(all,determiner)).
assert(data_word_type(no,determiner)).
assert(data_word_type(some,determiner)).
assert(data_word_type(one,determiner)).
assert(data_word_type(two,determiner)).
assert(data_word_type(three,determiner)).
assert(data_word_type(very,degree)).
assert(data_word_type(surprisingly,degree)).
assert(data_word_type(slightly,degree)).
assert(data_word_type(extremely,degree)).
assert(data_word_type(really,degree)).
assert(data_word_type(quite,degree)).
assert(data_word_type(kinda,degree)).
assert(data_word_type(annoyingly,degree)).
assert(data_word_type(good,adjective)).
assert(data_word_type(grey,adjective)).
assert(data_word_type(young,adjective)).
assert(data_word_type(big,adjective)).
assert(data_word_type(green,adjective)).
assert(data_word_type(hairy,adjective)).
assert(data_word_type(fat,adjective)).
assert(data_word_type(noisy,adjective)).
assert(data_word_type(unexpected,adjective)).
assert(data_word_type(amazing,adjective)).
assert(data_word_type(silly,adjective)).
assert(data_word_type(favorite,adjective)).
assert(data_word_type(warm,adjective)).
assert(data_word_type(fuzzy,adjective)).
assert(data_word_type(dry,adjective)).
assert(data_word_type(surprising,adjective)).
assert(data_word_type(fun,adjective)).
assert(data_word_type(quick,adjective)).
assert(data_word_type(brown,adjective)).
assert(data_word_type(lazy,adjective)).
assert(data_word_type(boy,noun)).
assert(data_word_type(girl,noun)).
assert(data_word_type(dog,noun)).
assert(data_word_type(cat,noun)).
assert(data_word_type(telescope,noun)).
assert(data_word_type(garden,noun)).
assert(data_word_type(conference,noun)).
assert(data_word_type(birds,noun)).
assert(data_word_type(statement,noun)).
assert(data_word_type(students,noun)).
assert(data_word_type(fact,noun)).
assert(data_word_type(car,noun)).
assert(data_word_type(store,noun)).
assert(data_word_type(tower,noun)).
assert(data_word_type(trash,noun)).
assert(data_word_type(pet,noun)).
assert(data_word_type(discussion,noun)).
assert(data_word_type(coffee,noun)).
assert(data_word_type(tea,noun)).
assert(data_word_type(meeting,noun)).
assert(data_word_type(fox,noun)).
assert(data_word_type(cake,noun)).
assert(data_word_type(pie,noun)).
assert(data_word_type(out,preposition)).
assert(data_word_type(up,preposition)).
assert(data_word_type(into,preposition)).
assert(data_word_type(in,preposition)).
assert(data_word_type(from,preposition)).
assert(data_word_type(at,preposition)).
assert(data_word_type(to,preposition)).
assert(data_word_type(with,preposition)).
assert(data_word_type(near,preposition)).
assert(data_word_type(behind,preposition)).
assert(data_word_type(around,preposition)).
assert(data_word_type(past,preposition)).
assert(data_word_type(after,preposition)).
assert(data_word_type(about,preposition)).
assert(data_word_type(over,preposition)).
assert(data_word_type(i,pronoun)).
assert(data_word_type(me,pronoun)).
assert(data_word_type(you,pronoun)).
assert(data_word_type(he,pronoun)).
assert(data_word_type(him,pronoun)).
assert(data_word_type(she,pronoun)).
assert(data_word_type(her,pronoun)).
assert(data_word_type(they,pronoun)).
assert(data_word_type(them,pronoun)).
assert(data_word_type(it,pronoun)).
assert(data_word_type(we,pronoun)).
assert(data_word_type(yall,pronoun)).
assert(data_word_type(everyone,pronoun)).
assert(data_word_type(everybody,pronoun)).
assert(data_word_type(my,pronoun)).
assert(data_word_type(this,pronoun)).
assert(data_word_type(jack,name)).
assert(data_word_type(jill,name)).
assert(data_word_type(mary,name)).
assert(data_word_type(felix,name)).
assert(data_word_type(max,name)).
assert(data_word_type(fido,name)).
assert(data_word_type(john,name)).
assert(data_word_type(joe,name)).
assert(data_word_type(dante,name)).
assert(data_word_type(gideon,name)).
assert(data_word_type(jake,name)).
assert(data_word_type(levi,name)).
assert(data_word_type(chloe,name)).
assert(data_word_type(diane,name)).
assert(data_word_type(kirsten,name)).
assert(data_word_type(casey,name)).
assert(data_word_type(jason,name)).
assert(data_word_type(that,complementizer)).
assert(data_word_type(fly,verb)).
assert(data_word_type(believed,verb)).
assert(data_word_type(surprised,verb)).
assert(data_word_type(challenged,verb)).
assert(data_word_type(seemed,verb)).
assert(data_word_type(is,verb)).
assert(data_word_type(was,verb)).
assert(data_word_type(leave,verb)).
assert(data_word_type(gave,verb)).
assert(data_word_type(chased,verb)).
assert(data_word_type(slept,verb)).
assert(data_word_type(said,verb)).
assert(data_word_type(revealed,verb)).
assert(data_word_type(passed,verb)).
assert(data_word_type(walked,verb)).
assert(data_word_type(went,verb)).
assert(data_word_type(looked,verb)).
assert(data_word_type(threw,verb)).
assert(data_word_type(ate,verb)).
assert(data_word_type(left,verb)).
assert(data_word_type(saw,verb)).
assert(data_word_type(drank,verb)).
assert(data_word_type(heard,verb)).
assert(data_word_type(jumps,verb)).
assert(data_word_type(climbed,verb)).
assert(data_word_type(out,particle)).
assert(data_word_type(up,particle)).
assert(data_word_type(both,adverb)).
assert(data_word_type(either,adverb)).
assert(data_word_type(neither,adverb)).
assert(data_word_type(quickly,adverb)).
assert(data_word_type(and,conjunction)).
assert(data_word_type(or,conjunction)).
assert(data_word_type(nor,conjunction)).
assert(data_word_type(fan,noun)).
assert(data_word_type(dark,adjective)).
assert(data_word_type(woke,verb)).
assert(data_word_type(street,noun)).
assert(data_word_type(dogs,noun)).
assert(data_word_type(old,adjective)).
assert(data_word_type(own,adjective)).
assert(data_word_type(way,noun)).
assert(data_word_type(wanted,verb)).
assert(data_word_type(jesus,name)).
assert(data_word_type(wept,verb)).
assert(data_word_type(man,noun)).
assert(data_word_type(harold,name)).
assert(data_word_type(soundly,adverb)).
